import _ from 'lodash'
import React, { Component } from 'react'
import PropTypes from 'prop-types'
import {
  FillContainer,
  Card,
  CardHeader,
  CardContent,
  CardFooter,
  Button,
  Snackbar,
} from '@fc/react-playbook'
import { graphql } from 'react-relay'
import commitMutation from '../../utils/commitMutation'
import s from './OrderConfirmRoute.scss'
import OrderList from '../../components/OrderConfirm/OrderList'

class OrderConfirmRoute extends Component {
  static propTypes = {
    history: PropTypes.shape({
      goBack: PropTypes.func.isRequired,
    }).isRequired,
  }

  state = {
    enterOrderPayload: [],
    selected: [],
    response: {},
  }

  static getDerivedStateFromProps(props) {
    const { location } = props
    const enterOrderPayload =
      typeof location.state !== 'undefined' &&
      typeof location.state.enterOrderPayload !== 'undefined'
        ? location.state.enterOrderPayload
        : []

    const selected =
      typeof location.state !== 'undefined' &&
      typeof location.state.selected !== 'undefined'
        ? location.state.selected
        : []

    const response =
      typeof location.state !== 'undefined' &&
      typeof location.state.response !== 'undefined'
        ? location.state.response
        : []

    return {
      enterOrderPayload,
      selected,
      response,
    }
  }

  handleSubmit = () => {
    this.confirmCreateOrders()
  }

  confirmCreateOrders = async () => {
    const { enterOrderPayload } = this.state
    const mutation = graphql`
      mutation OrderConfirmRouteMutation($input: OrderRequestsInput!) {
        confirmOrders(input: $input) {
          id
          orderResponsesId
        }
      }
    `
    await commitMutation({
      mutation,
      variables: {
        input: {
          clientMutationId: _.uniqueId('mmf-order-request-confirm'),
          orderRequests: enterOrderPayload,
        },
      },
      onError: () => {
        this.setState({
          snackbar: 'error',
          message:
            'Order did not create successfully, please contact administrator.',
        })
      },
      onCompleted: () => {
        this.setState({
          snackbar: 'success',
          message: 'Order has been created successfully.',
        })
      },
    })
  }

  handleCancel = () => {
    const { history } = this.props
    history.goBack()
  }

  render() {
    const { snackbar, message, selected, response } = this.state
    console.log('----> seleceted', JSON.stringify(selected))
    console.log('----> response', JSON.stringify(response))
    return (
      <FillContainer>
        <Card className={s.card}>
          <CardHeader>Order Confirm</CardHeader>
          <CardContent style={{ overflow: 'auto' }}>
            <OrderList
              orders={response.enterOrders.orderResponses}
              tradeValidationSummaryMessages={
                response.enterOrders.tradeValidationSummaryMessages
              }
              selectedShortTermFunds={selected}
            />
          </CardContent>
          <CardFooter className={s.footer}>
            <Button onClick={this.handleCancel}>Cancel</Button>
            <Button primary type="submit" onClick={this.handleSubmit}>
              Confirm
            </Button>
          </CardFooter>
        </Card>
        <Snackbar
          message={message || ''}
          alertStyle={snackbar}
          active={!!snackbar}
          onDismiss={() => {
            const { history } = this.props
            this.setState({ snackbar: null })
            history.push('/trade/direct/short-term')
          }}
          timeout={20000}
        />
      </FillContainer>
    )
  }
}

export default OrderConfirmRoute
...
import React, { Fragment } from 'react'
import { Field } from 'redux-form'
import _ from 'lodash'
import moment from 'moment'
import cx from 'classnames'
import PropTypes from 'prop-types'
import { Icon } from '@fc/react-playbook'

import OrdersValidationFactory from './OrdersValidationFactory'
import { getLongAccount } from '../../utils/Stringify'
// import CurrencyRenderer from '../../renderers/CurrencyRenderer'
import TimeFormatter from '../TimeFormatter/TimeFormatter'
import s from './Order.scss'
import ValueField from '../ValueField'

const getAccountByFoundAccountId = (
  selectedShortTermFunds,
  fundAccountIdRef,
) => {
  let selectedAccount = {}
  _.forEach(selectedShortTermFunds.selected, entity => {
    const account = _.find(
      entity.accounts,
      item => item.id === fundAccountIdRef,
    )
    if (account) {
      selectedAccount = account
    }
  })
  return selectedAccount
}

const generateValidationDetailsIndex = index => index
const getValidationDetails = values => {
  const validations = new OrdersValidationFactory(values)
  const validationDetails = validations.getAllValidationsForGridView()
  return (
    <div>
      {validationDetails.map((error, index) => (
        <div key={generateValidationDetailsIndex(index)}>
          <Icon name={error.iconClass} className={cx(s.warning)} />
          {error.message}{' '}
        </div>
      ))}
    </div>
  )
}

const formatSelectedTradeWindowDisplayText = (entity, timeZone) => {
  const {
    label,
    redEndTime,
    subEndTime,
    redemptionSettlementPeriod,
    subscriptionSettlementPeriod,
  } = entity.tradeWindow

  const tz = moment.tz(timeZone).zoneAbbr()
  return label ? (
    <span style={{ fontWeight: 400 }}>{label}</span>
  ) : (
    <Fragment>
      <span style={{ fontWeight: 400 }}>Window Cutoff </span>
      <span style={{ paddingRight: '5px' }}>
        ({tz}
        ):
      </span>
      <span>Buy:</span>
      <TimeFormatter time={subEndTime} showTimeZone={false} />
      <span style={{ paddingLeft: '5px', paddingRight: '5px' }}> | </span>
      <span>Sell:</span>
      <TimeFormatter time={redEndTime} showTimeZone={false} />
      <br />
      <span style={{ paddingRight: '23px' }}>Settlement Period: </span>
      <span style={{ paddingRight: '5px' }}>
        (T+
        {subscriptionSettlementPeriod})
      </span>
      <span style={{ paddingLeft: '27px', paddingRight: '5px' }}> | </span>
      <span>
        (T+
        {redemptionSettlementPeriod})
      </span>
    </Fragment>
  )
}

const order = props => {
  const { value, selectedShortTermFunds } = props
  const selectedAccountEntity = getAccountByFoundAccountId(
    selectedShortTermFunds,
    value.orderRequest.fundAccountId,
  )
  const showValidations =
    value.tradeBusinessRulesValidationErrors.length ||
    value.tradeComplianceRulesValidationErrors.length ||
    value.tradeInputValidationErrors.length
  console.log(
    '51----------------------- Order.js ',
    value,
    selectedAccountEntity,
  )
  return (
    <div className={s.confirmOrderWrap}>
      <div className={s.form}>
        <div className={s.column}>
          <div className={cx(s.row, s.accountInfo)}>
            <Field
              name="fund"
              props={{
                formGroupClassName: s.accountInfo,
                inline: true,
                showDelimiter: true,
                label: 'Fund',
                renderer: () => (
                  <div className={s.accountInfo}>
                    {_.get(selectedAccountEntity, 'fund.name')}(
                    {_.get(selectedAccountEntity, 'fund.provider.name')})
                  </div>
                ),
              }}
              component={ValueField}
            />
            <Field
              name="account"
              props={{
                formGroupClassName: s.account,
                inline: true,
                showDelimiter: true,
                label: 'Account',
                renderer: () => (
                  <div>
                    {getLongAccount(_.get(selectedAccountEntity, 'account'))}
                  </div>
                ),
              }}
              component={ValueField}
            />
            <Field
              props={{
                formGroupClassName: s.currencyField,
                inline: true,
                showDelimiter: true,
                label: 'Market Value',
                renderer: () => (
                  <div>
                    {_.get(selectedAccountEntity, 'balance.balanceAmt')}
                  </div>
                ),
              }}
              name="Market Value"
              component={ValueField}
            />

            <Field
              props={{
                formGroupClassName: s.numericField,
                inline: true,
                showDelimiter: true,
                label: 'Total Share',
                renderer: () => (
                  <div>{_.get(selectedAccountEntity, 'balance.shares')}</div>
                ),
              }}
              name="Total Share"
              component={ValueField}
            />
            <Field
              props={{
                formGroupClassName: s.currencyField,
                inline: true,
                showDelimiter: true,
                label: 'Est. Market Value',
                renderer: () => (
                  <div>
                    {_.get(selectedAccountEntity, 'balance.balanceAmt')}
                  </div>
                ),
              }}
              component={ValueField}
              name="Est. Market Value"
            />
            <Field
              props={{
                formGroupClassName: s.numericField,
                inline: true,
                showDelimiter: true,
                label: 'Est. Share',
              }}
              name={_.get(selectedAccountEntity, 'estimatedShare')}
              component={ValueField}
            />
            <Field
              props={{
                formGroupClassName: s.percentageField,
                inline: true,
                showDelimiter: true,
                label: 'Fund % Owned',
                renderer: ({ val }) => (val ? `${val}%` : ''),
              }}
              name={_.get(selectedAccountEntity, 'fundPercentOwned')}
              component={ValueField}
            />
            <Field
              props={{
                formGroupClassName: s.currencyField,
                inline: true,
                showDelimiter: true,
                label: 'Est. Total Market Value',
                renderer: ({ val }) => (val ? `$${val}` : ''),
              }}
              name={_.get(selectedAccountEntity, 'estimatedTotalMarketValue')}
              component={ValueField}
            />
            <Field
              props={{
                formGroupClassName: s.numericField,
                inline: true,
                showDelimiter: true,
                label: 'Est. Total Share',
              }}
              name={_.get(selectedAccountEntity, 'estimatedTotalShare')}
              component={ValueField}
            />
          </div>
          <div className={cx(s.row, s.accountInfo)}>
            <Field
              name="side"
              props={{
                formGroupClassName: s.account,
                inline: true,
                showDelimiter: true,
                label: 'Order Side',
                renderer: () => <div>{value.orderRequest.side}</div>,
              }}
              component={ValueField}
            />
            {value.orderRequest.redemptionFeeType ? (
              <Field
                name="redemptionFeeType"
                props={{
                  formGroupClassName: s.account,
                  inline: true,
                  showDelimiter: true,
                  label: 'Redemption Type',
                  renderer: () => (
                    <div>{value.orderRequest.redemptionFeeType}</div>
                  ),
                }}
                component={ValueField}
              />
            ) : (
              ''
            )}
            <Field
              name="qtyType"
              props={{
                formGroupClassName: s.account,
                inline: true,
                showDelimiter: true,
                label: 'Quantity Type',
                renderer: () => <div>{value.orderRequest.qtyType}</div>,
              }}
              component={ValueField}
            />
            <Field
              name="quantity"
              props={{
                formGroupClassName: s.account,
                inline: true,
                showDelimiter: true,
                label: 'Amount',
                renderer: () => <div>{value.orderRequest.quantity}</div>,
              }}
              component={ValueField}
            />
            {_.get(selectedAccountEntity, 'settlementDate') ? (
              <Field
                name="settlementDate"
                props={{
                  formGroupClassName: s.account,
                  inline: true,
                  showDelimiter: true,
                  label: 'Settlement Date',
                  renderer: () => (
                    <div>
                      {_.get(selectedAccountEntity, 'settlementDate.name')}
                    </div>
                  ),
                }}
                component={ValueField}
              />
            ) : (
              ''
            )}
            <Field
              name="tradeDate"
              props={{
                formGroupClassName: s.account,
                inline: true,
                showDelimiter: true,
                label: 'Trade Date',
                renderer: () => (
                  <div>{_.get(selectedAccountEntity, 'tradeDate')}</div>
                ),
              }}
              component={ValueField}
            />

            {showValidations ? (
              <Field
                name="validations"
                props={{
                  formGroupClassName: s.account,
                  inline: true,
                  showDelimiter: true,
                  label: 'Validations',
                  renderer: () => <div>{getValidationDetails(value)}</div>,
                }}
                component={ValueField}
              />
            ) : (
              ''
            )}
          </div>
          <div className={s.row}>
            {selectedAccountEntity.tradeWindow ? (
              <Field
                props={{
                  formGroupClassName: s.settlementFields,
                  inline: true,
                  showDelimiter: true,
                  label: 'Trade Window',
                  renderer: () => (
                    <div>
                      {formatSelectedTradeWindowDisplayText(
                        selectedAccountEntity,
                        'EDT',
                      )}
                    </div>
                  ),
                }}
                name="tradeWindow"
                component={ValueField}
              />
            ) : (
              ''
            )}
          </div>
          <div className={s.row}>
            {value.orderRequest.investorCashSettlementInstruction ? (
              <Field
                props={{
                  formGroupClassName: s.settlementFields,
                  inline: true,
                  showDelimiter: true,
                  label: 'Cash Settlement Instructions',
                  renderer: () => (
                    <div>
                      {_.get(
                        selectedAccountEntity,
                        'cashSettlementInstructions.name',
                      )}
                    </div>
                  ),
                }}
                name="cashSettlementInstructions"
                component={ValueField}
              />
            ) : (
              ''
            )}
            {value.orderRequest.investorCustodySettlementInstruction ? (
              <Field
                props={{
                  formGroupClassName: s.settlementFields,
                  inline: true,
                  showDelimiter: true,
                  label: 'Custody Settlement Instructions',
                  renderer: () => (
                    <div>
                      {_.get(
                        selectedAccountEntity,
                        'custodySettlementInstructions.name',
                      )}
                    </div>
                  ),
                }}
                name="custodySettlementInstructions"
                component={ValueField}
              />
            ) : (
              ''
            )}
          </div>
        </div>
      </div>
    </div>
  )
}
order.propTypes = {
  value: PropTypes.instanceOf(Object),
  selectedShortTermFunds: PropTypes.instanceOf(Array),
}
export default order
....


import React from 'react'
import { reduxForm } from 'redux-form'
import PropTypes from 'prop-types'
import { Icon } from '@fc/react-playbook'
import Order from './Order'

const generateOrderEntityIndex = index => index
const warningMessagesLookup = [
  'Hard Cutoff', // 0
  'Market Value', // 1
  'Percentage Owned', // 2
  'Audit calculations could not be performed due to stale or insufficient data.', // 3
  'Before investing in mutual funds, it is important that you understand the sales charges, expenses and management fees that you may be charged. The prospectus link is displayed on the fund details page for the funds you are purchasing. Please click confirm to acknowledge that you have read and agreed to the terms as described', // 4
  'Audit calculations will not be performed on future dated trades.', // 5
  'Trade Window', // 6
  'Trade Date', // 7
  'Override Cutoff', // 8
  'Future Trade', // 9
  'Cash Payment Cutoff', // 10
  'Trade Lead Days', // 11
  'Before investing in mutual funds, it is important that you understand the sales charges, expenses and management fees that you may be charged. The prospectus and KIID links are displayed on the fund details page for the funds you are purchasing. Please click confirm to acknowledge that you have read and agreed to the terms as described', // 12
  'Redemption Gate', // 13
  'Redemption Liquidity Fee', // 14
  'Redemption Liquidity Fee (Estimated Fee Pct.)', // 15
  'Fund Daily Liquidity', // 16
  'Fund Weekly Liquidity', // 17
  'Fund Liquidity', // 18
  'Approval Trade Size', // 19
  'Daily Subscription', // 20
]

const OrderList = props => (
  <div style={{ display: 'flex', flexDirection: 'column' }}>
    <div>
      <div style={{ marginLeft: '25px' }}>
        {props.tradeValidationSummaryMessages.map(item => (
          <div>
            {item === warningMessagesLookup[0] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Cutoff</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Hard Cutoff - the order was placed after the cutoff time.
                    </span>
                  </li>
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Soft Cutoff - the order was placed after the cutoff time
                      but can still be submitted for processing. The Fund
                      Processor may still reject the order.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[10] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Cash Payment Cutoff</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Cash Payment Cutoff - the payment request was placed after
                      the custodian cash cutoff time.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[3] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Incomplete Audit</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Audit calculations could not be performed due to stale or
                      insufficient data.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[19] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Approval Trade Size</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Approval Required - Trade size surpasses the
                      subscription/redemption limit set by the institution.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[1] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Market Value Limit</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Market Value Limit - This order amount surpasses the
                      institution\s or applicable account(s) market value limit
                      set at the fund level. If you choose to process this order
                      Fund Connect will automatically reject the order.
                    </span>
                  </li>
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Market Value Limit - This order amount surpasses the
                      institution\s or applicable account(s) market value limit
                      set at the fund level but can still be submitted for
                      processing.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[2] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Percentage Owned Limit</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      % Owned Limit - This order amount surpasses the
                      institution\s or applicable account(s) % owned limit set
                      at the fund level. If you choose to process this order
                      Fund Connect will automatically reject the order.
                    </span>
                  </li>
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      % Owned Limit - This order amount surpasses the
                      institution\s or applicable account(s) % owned limit set
                      at the fund level but can still be submitted for
                      processing.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[20] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Daily Subscription Limit</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Daily Subscription Limit - This order amount surpasses
                      your institution\s or applicable account(s) daily
                      subscription limit set at the fund level. If you choose to
                      continue this order will automatically be rejected.
                    </span>
                  </li>
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Daily Subscription Limit - This order amount surpasses
                      your institution\s or applicable account(s) daily
                      subscription limit set at the fund level but can still be
                      submitted for processing.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[4] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Prospectus Review</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Before investing in mutual funds it is important that you
                      understand the sales charges expenses and management fees
                      that you may be charged. The prospectus link is displayed
                      on the fund details page for the funds you are purchasing.
                      Please click confirm to acknowledge that you have read and
                      agreed to the terms as described.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[5] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Future Dated Trade</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Audit calculations will not be performed on future dated
                      trades.
                    </span>
                  </li>
                </ul>
              </div>
            )}

            {item === warningMessagesLookup[6] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Trade Window</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Trade Window - The fund is closed for trading. If you
                      choose to continue this order will automatically be
                      rejected.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[7] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Trade Date</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Trade Window - The trade date can only be the next
                      business day for this fund. If you choose to continue this
                      order will automatically be rejected.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[8] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Override Cutoff</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Trade Cutoff and Trade Window validation have been
                      bypassed.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[9] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Future Dated Trade</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Trade Window - Future dated trade is not supported for
                      this fund. If you choose to continue this order will
                      automatically be rejected.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[11] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Trade Date</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Trade Lead Days - Order must be submitted prior to trade
                      date. If you choose to continue this order will
                      automatically be rejected.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[12] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Prospectus Review</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Before investing in mutual funds it is important that you
                      understand the sales charges expenses and management fees
                      that you may be charged. The prospectus and KIID links are
                      displayed on the fund details page for the funds you are
                      purchasing. Please click confirm to acknowledge that you
                      have read and agreed to the terms as described.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[13] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Redemption Gate</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-restricted" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Redemption gate is in effect. It will not be possible to
                      redeem shares until the gate has been lifted.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[14] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Redemption Liquidity Fee</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Redemption liquidity fee is currently in effect for this
                      fund.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[15] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Estimated Fee Percentage</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Redemption liquidity fee is currently in effect for this
                      fund.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[16] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Fund Daily Liquidity Limit</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Fund Daily Liquidity Limit - Fund daily liquidity % value
                      is below institution\s or applicable account(s) hard
                      limit. If you choose to process this order Fund Connect
                      will automatically reject the order.
                    </span>
                  </li>
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Fund Daily Liquidity Limit - Fund daily liquidity % value
                      is below institution\s or applicable account(s) soft
                      limit. This order can be submitted for processing.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[17] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Fund Weekly Liquidity Limit</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-error" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Fund Weekly Liquidity Limit - Fund weekly liquidity %
                      value is below institution\s or applicable account(s) hard
                      limit. If you choose to process this order Fund Connect
                      will automatically reject the order.
                    </span>
                  </li>
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Fund Weekly Liquidity Limit - Fund weekly liquidity %
                      value is below institution\s or applicable account(s) soft
                      limit. This order can be submitted for processing.
                    </span>
                  </li>
                </ul>
              </div>
            )}
            {item === warningMessagesLookup[18] && (
              <div>
                <p
                  style={{
                    lineHeight: '11pt',
                    fontFamily: 'Verdana, Helvetica, sans-serif',
                    fontSize: '11px',
                  }}
                >
                  <strong>Fund Liquidity</strong>
                </p>
                <ul
                  style={{
                    listStyleType: 'none',
                    padding: '0px',
                  }}
                >
                  <li>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <Icon name="material-warning" className="warning" />
                    <span
                      style={{
                        lineHeight: '11pt',
                        fontFamily: 'Verdana, Helvetica, sans-serif',
                        fontSize: '11px',
                      }}
                    >
                      Fund does not report daily/weekly liquidity statistics.
                    </span>
                  </li>
                </ul>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
    <div>
      {props.orders.map((order, index) => (
        <Order
          key={generateOrderEntityIndex(index)}
          value={order}
          selectedShortTermFunds={props.selectedShortTermFunds}
        />
      ))}
    </div>
  </div>
)

OrderList.propTypes = {
  orders: PropTypes.instanceOf(Array),
  tradeValidationSummaryMessages: PropTypes.instanceOf(Array),
  selectedShortTermFunds: PropTypes.instanceOf(Array),
}

export default reduxForm({ form: 'OrderList' })(OrderList)

import _ from 'lodash'

class OrdersValidationFactory {
  constructor(dataSet) {
    this.validationSrc = dataSet
  }

  getAllValidationsForGridView = () => {
    let response = []
    response = _.concat(
      response,
      this.applyValidationsForGridByErrorType('tradeInputValidationErrors'),
    )
    response = _.concat(
      response,
      this.applyValidationsForGridByErrorType(
        'tradeBusinessRulesValidationErrors',
      ),
    )
    response = _.concat(
      response,
      this.applyValidationsForGridByErrorType(
        'tradeComplianceRulesValidationErrors',
      ),
    )
    return response
  }

  applyValidationsForGridByErrorType = errorType => {
    if (errorType === 'tradeInputValidationErrors') {
      return this.getTradeInputValidationErrors()
    }
    if (errorType === 'tradeBusinessRulesValidationErrors') {
      return this.getTradeBusinessRulesValidationErrors(
        this.validationSrc.tradeBusinessRulesValidationErrors,
      )
    }
    return this.getTradeComplianceRulesValidationErrors(
      this.validationSrc.tradeComplianceRulesValidationErrors,
    )
  }

  getTradeInputValidationErrors = () => []

  getTradeBusinessRulesValidationErrors = errorDetails => {
    const response = []
    const iconClassesMap = {
      WARNING: 'material-warning',
      ERROR: 'material-error',
      RESTRICTED: 'material-restricted',
    }
    _.forEach(errorDetails, entity => {
      response.push({
        iconClass: iconClassesMap[entity.errorLevel],
        message: entity.errorMessage,
      })
    })
    return response
  }

  getTradeComplianceRulesValidationErrors = errorDetails => {
    const response = []
    const iconClassesMap = {
      WARNING: 'material-warning',
      ERROR: 'material-error',
      RESTRICTED: 'glyphicon glyphicon-material-restricted',
    }
    _.forEach(errorDetails, entity => {
      response.push({
        iconClass: iconClassesMap[entity.errorLevel],
        message: entity.errorMessage,
      })
    })
    return response
  }
}

export default OrdersValidationFactory


